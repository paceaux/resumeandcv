---
title: Technologies
description: Frank M. Taylor's Experience and technical skills. Nunchuck skills not listed, but still included. 
subnavigation: technologies
---
<section class="section section--technologies" role="region" aria-labelledby="technology-section">
    <header class="s-header">
        <h1 class="s-header__title" id="technology-section">Technologies</h1>
        <article class="article">
            <h2 class="article__title">
                The Full Stack
            </h2>
            <p>Though the bulk of my experience is in front-end development, I have developed across the entire stack of web sites and web applications.</p>
			<div class="listContainer" itemscope itemtype="http://schema.org/ItemList">
				<h3 class="list__title" itemprop="name">Full Stack Highlights</h3>
				<ul class="list list--typeNone">
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">HTML, CSS, JavaScript</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">WebPack</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">Vue, React, Angular</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">Stylus, SASS, SCSS</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">Express.js, Koa.js</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">Node.js, .NET core</li>
					<li class="list__item" itemprop="itemListElement" itemtype="http://schema.org/SoftwareApplication">MongoDB, ArangoDB, PostgreSQL</li>
				</ul>
			</div>            
            
        </article>
        <details class="article article--collapsible">
            <summary class="article__header">
                <h2 class="article__title">My History with Programming</h2>
            </summary>
            <div class="article__content">
                <h3>Programming started early</h3>
                <p>My first computer was a Commodore 64. I probably wrote my first program in BASIC when I was about six. (I think I made an ASCII rocket launch). My mother taught computer literacy and programming to high schoolers, and she had me go through the same curriculum. I learned the basics of logic, algorithms, and computing.</p>
                <p>My first <em>useful program</em> I wrote on my T-83 calculator in high school. I'd enrolled in Physics, but I only had two years of math (Algebra and Geometry). I didn't know how to do any of the formulas we needed for the physics class. So I had someone break down how to solve for the different variables in the equations, and I wrote a program that would solve all of the formulas for any of the given variables. </p>
                
                <h3>I didn't plan on being a developer</h3>
                <p>I went to college and graduated with the hopes of becoming a translator. I liked learning languages (and I still do). My first real job after college was taking French and Spanish calls in a call center. I was hoping to get transferred into the international relations department. </p>
                
                <h3>Web Development started as a solution to a problem</h3>
                <p>I was promoted a few times and ended up being a Product Inquiries Coordinator. This was a job where I had to answer highly detailed product questions. My training for this went like this:</p>
                <blockquote>  Here's an email file with about 10,000 emails. When you get a question, search through those files. If you don't find an answer, ask R&amp;D. </blockquote>
                
                <h4>That lasted for about 30 minutes.</h4>
                <p>I ran some analytics on the most frequent kinds of questions. I put together the most common answers in a Word document. And I copied and pasted into emails. </p>
                
                <h3> That lasted for about a day</h3>
                <p>I quickly discovered that if you copy and paste from Word into a rich text email application, you get some really ugly formatting. A quick Google search revealed that I should copy from an HTML document, not a Word document.  So I saved that Word document as an HTML, and my first "site", was built.</p>
                <p> I learned that Word, even if you save as an HTML file, still leaves extraneous markup. So I learned to create and edit files using just Notepad. I also learned how to make icons &mdash; complete with shadows, rounded corners, and gradients &mdash; entirely in MSPaint. </p>
                <p>So the <em>problem</em> of not having a knowledge base of our products was solved with a robust internal website</p>
                
                <h3>And this evolved into a (web) career</h3>
                <p>For a brief time at Mannatech, I was the call center trainer. I learned to turn Visio documents into interactive training materials. Between the internal knowledge-base and the training tools, that got the attention of the web department, where I moved there as a content producer</p>
                
                <h3>And then I fell in love with the browser</h3>
                <p>I learned about requirements gathering while I was a content producer, which lead to me to do double-duty as a BA and content producer.</p>
                <p> In the mean time, I'd started learning about HTML5 and CSS3. I started playing with CSS3 on a daily basis, learning all the cool things I could do with it. With that, I decided to get a website (frankmtaylor.com), and build a resume. A few jobs later, I find myself playing with HTML, CSS, and JavaScript every day. It's kinda fun.</p>
            
            </div>
        </details>
</section>